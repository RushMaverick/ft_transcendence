{
	"info": {
		"_postman_id": "1e4ae72c-b1c7-464c-b6fc-d526d4aa6b6c",
		"name": "ft_tranchendence_matches",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2745372"
	},
	"item": [
		{
			"name": "JWT Refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set('access_token', pm.response.json().access)",
							"pm.environment.set('JWT_access', pm.response.json().access)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"refresh\": \"{{refresh_token}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/token/refresh/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"token",
						"refresh",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "JWT Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set('access_token', pm.response.json().access)",
							"pm.collectionVariables.set('refresh_token', pm.response.json().refresh)",
							"pm.environment.set('JWT_access', pm.response.json().access)",
							"pm.environment.set('JWT_refresh', pm.response.json().refresh)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/token/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Register User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set('username', pm.response.json().username)",
							"pm.collectionVariables.set('user_id', pm.response.json().id)",
							"",
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required field - username\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.username).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Username is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.username).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Username should not be empty\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let randomPassword = pm.variables.replaceIn('{{$randomPassword}}');",
							"pm.collectionVariables.set('password', randomPassword);",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{password}}\",\n    \"password2\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Matches",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/matches/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"matches",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Match",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"player1\": 1,\n    \"player2\": {{user_id}},\n    \"winner\": {{user_id}},\n    \"player1_score\": 5,\n    \"player2_score\": 7\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/matches/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"matches",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Player Matches",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/matches/player/{{user_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"matches",
						"player",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "password",
			"value": "",
			"type": "string"
		},
		{
			"key": "new_password",
			"value": ""
		}
	]
}